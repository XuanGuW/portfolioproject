  --sql practice with Alex:https://www.youtube.com/watch?v=qfyynHBFOsM&list=PLUaB-1hjhk8H48Pj32z4GZgGWyylqv85f&index=1
  --select data
SELECT
  *
FROM
  `upbeat-medley-370820.dataset.table_death`
ORDER BY
  3,
  4; --LOCATION AND DATE
  /*SELECT *
FROM `upbeat-medley-370820.dataset.table_vaccination`
order by 3, 4;*/
SELECT
  Location,
  date,
  total_cases,
  new_cases,
  total_deaths,
  population
FROM
  `upbeat-medley-370820.dataset.table_death`
ORDER BY
  1,
  2;
  ---looking at total cases vs total deaths
  -- total death rate in Canada
SELECT
  Location,
  date,
  total_cases,
  new_cases,
  total_deaths,
  (total_deaths/total_cases)*100 AS Deathrate
FROM
  `upbeat-medley-370820.dataset.table_death`
WHERE
  location LIKE '%Canada%'
ORDER BY
  1,
  2;
  --- percentage of population got covid in canada
SELECT
  Location,
  date,
  population,
  total_cases,
  (total_cases/population)*100 AS infection_rate
FROM
  `upbeat-medley-370820.dataset.table_death`
WHERE
  location LIKE '%Canada%'
ORDER BY
  1,
  2;
  -- looking at countries with highest infection rate
SELECT
  Location,
  population,
  MAX(total_cases) AS HighestInfection,
  MAX((total_cases/population))*100 AS infection_rate
FROM
  `upbeat-medley-370820.dataset.table_death`
WHERE
  continent IS NOT NULL --exculding location of "world", and continents
GROUP BY
  location,
  population
ORDER BY
  infection_rate DESC;
  -- looking at countries' total death
SELECT
  Location,
  MAX(CAST (total_deaths AS int)) AS TotalDeath
FROM
  `upbeat-medley-370820.dataset.table_death`
WHERE
  continent IS NOT NULL --exculding location of "world", and continents
GROUP BY
  location
ORDER BY
  TotalDeath DESC;
  -- NOW ANALIZE BY CONTINENT
  --!!! will come back to this later 42:30
  -- showing continents with the higherst death
SELECT
  continent,
  MAX(CAST (total_deaths AS int)) AS TotalDeath
FROM
  `upbeat-medley-370820.dataset.table_death`
WHERE
  continent IS NOT NULL --exculding location of "world"
GROUP BY
  continent
ORDER BY
  TotalDeath DESC;
  -- Global Numbers
SELECT
  date,
  SUM(new_cases) AS total_cases,
  SUM(CAST (new_deaths AS int)) AS total_death,
  SUM(new_deaths)/SUM(CAST (new_cases AS int))*100 AS Death_rate
FROM
  `upbeat-medley-370820.dataset.table_death`
WHERE
  continent IS NOT NULL --exculding location of "world", and continents
GROUP BY
  date
ORDER BY
  1,
  2;
  -- looking at total popultaion vs vaccinations
SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(CAST(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY Dea.LOCATION, dea.date)--??? why order here?
  AS rolling_people_vaccinated--, (rolling_people_vaccinated/population)*100
FROM
  `upbeat-medley-370820.dataset.table_death`dea
JOIN
  `upbeat-medley-370820.dataset.table_vaccination`vac
ON
  dea.location = vac.location
  AND dea.date=vac.date
WHERE
  dea.continent IS NOT NULL
ORDER BY
  2,
  3;
  -- use cte(what is this?)
WITH
  popvsvac AS(
  SELECT
    dea.continent,
    dea.location,
    dea.date,
    dea.population,
    vac.new_vaccinations,
    SUM(CAST(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY Dea.LOCATION, dea.date)--??? why order here?
    AS rolling_people_vaccinated--, (rolling_people_vaccinated/population)*100
  FROM
    `upbeat-medley-370820.dataset.table_death`dea
  JOIN
    `upbeat-medley-370820.dataset.table_vaccination`vac
  ON
    dea.location = vac.location
    AND dea.date=vac.date
  WHERE
    dea.continent IS NOT NULL
  ORDER BY
    2,
    3 )
SELECT
  *,
  (rolling_people_vaccinated/population)*100
FROM
  popvsvac;
  -- temp table
  CREATE TEMP TABLE percent_population_vaccinated (Continent STRING(255),
    Location STRING(255),
    date datetime,
    Poupulation numeric,
    new_vaccinations numeric,
    rolling_people_vaccinated numeric);
INSERT INTO
  percent_population_vaccinated
SELECT
  dea.continent,
  dea.location,
  dea.date,
  dea.population,
  vac.new_vaccinations,
  SUM(CAST(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY Dea.LOCATION, dea.date)--??? why order here?
  AS rolling_people_vaccinated--, (rolling_people_vaccinated/population)*100
FROM
  `upbeat-medley-370820.dataset.table_death`dea
JOIN
  `upbeat-medley-370820.dataset.table_vaccination`vac
ON
  dea.location = vac.location
  AND dea.date=vac.date;
  --where dea.continent is not null
  --order by 2,3
SELECT
  *,
  (rolling_people_vaccinated/Poupulation)*100
FROM
  percent_population_vaccinated;
  --seems unable to create view on temp table



  
